{"ast":null,"code":"var _jsxFileName = \"/home/ajay/apps/covidtrack/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n  const options = {\n    responsive: true,\n    scales: {\n      yAxes: [{\n        type: 'linear',\n        ticks: {\n          beginAtZero: true,\n          max: undefined,\n          precision: 0\n        },\n        scaleLabel: {\n          display: false,\n          labelString: 'Total Cases'\n        }\n      }],\n      xAxes: [{\n        type: 'time',\n        time: {\n          unit: 'day',\n          tooltipFormat: 'MMM DD',\n          stepSize: 7,\n          displayFormats: {\n            millisecond: 'MMM DD',\n            second: 'MMM DD',\n            minute: 'MMM DD',\n            hour: 'MMM DD',\n            day: 'MMM DD',\n            week: 'MMM DD',\n            month: 'MMM DD',\n            quarter: 'MMM DD',\n            year: 'MMM DD'\n          }\n        },\n        gridLines: {\n          color: 'rgba(0, 0, 0, 0)'\n        }\n      }]\n    }\n  };\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }) : null;\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => new Date(date).toDateString().split(' ').slice(1).join(' ')),\n      datasets: [{\n        data: dailyData.map(data => data.confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(data => data.deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    },\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/home/ajay/apps/covidtrack/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","Line","Bar","fetchDailyData","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchMyAPI","initialDailyData","options","responsive","scales","yAxes","type","ticks","beginAtZero","max","undefined","precision","scaleLabel","display","labelString","xAxes","time","unit","tooltipFormat","stepSize","displayFormats","millisecond","second","minute","hour","day","week","month","quarter","year","gridLines","color","barChart","labels","datasets","label","backgroundColor","value","legend","title","text","lineChart","map","date","Date","toDateString","split","slice","join","borderColor","fill","container"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n    const [dailyData, setDailyData] = useState({});\n  \n    useEffect(() => {\n      const fetchMyAPI = async () => {\n        const initialDailyData = await fetchDailyData();\n  \n        setDailyData(initialDailyData);\n      };\n  \n      fetchMyAPI();\n    }, []);\n\n  const options = {\n    responsive: true, scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n          scaleLabel: {\n            display: false,\n            labelString: 'Total Cases',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n    },\n  };\n\n    const barChart = (\n        confirmed ? (\n          <Bar\n            data={{\n              labels: ['Infected', 'Recovered', 'Deaths'],\n              datasets: [\n                {\n                  label: 'People',\n                  backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                  data: [confirmed.value, recovered.value, deaths.value],\n                },\n              ],\n            }}\n            options={{\n              legend: { display: false },\n              title: { display: true, text: `Current state in ${country}` },\n            }}\n          />\n        ) : null\n      );\n\n      const lineChart = (\n        dailyData[0] ? (\n          <Line\n            data={{\n              labels: dailyData.map(({ date }) => new Date(date).toDateString().split(' ').slice(1).join(' ')),\n              datasets: [{\n                data: dailyData.map((data) => data.confirmed),\n                label: 'Infected',\n                borderColor: '#3333ff',\n                fill: true,\n              }, {\n                data: dailyData.map((data) => data.deaths),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                fill: true,\n              },\n              ],\n            }} options={options}\n          />\n        ) : null\n      );\n\n      return (\n        <div className={styles.container}>\n          {country ? barChart : lineChart}\n        </div>\n      );\n    };\n\n\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}