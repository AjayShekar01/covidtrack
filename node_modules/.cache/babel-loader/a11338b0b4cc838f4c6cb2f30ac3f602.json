{"ast":null,"code":"var _jsxFileName = \"/home/ajay/apps/covidtrack/src/components/Comparitivechart/Comparitivechart.jsx\";\nimport React, { useRef, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2'; // import { fetchDailyData } from '../../api';\n\nimport styles from './Comparitivechart.module.css';\n\nconst Comparitivechart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  // const [dailyData, setDailyData] = useState({});\n  // useEffect(() => {\n  //   const fetchMyAPI = async () => {\n  //     const initialDailyData = await fetchDailyData();\n  //     setDailyData(initialDailyData);\n  //   };\n  //   fetchMyAPI();\n  // }, []);\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  const confirmed2 = usePrevious(data);\n  console.log(data);\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['country', 'country2'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed.value, confirmed2.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, barChart);\n};\n\nexport default Comparitivechart;","map":{"version":3,"sources":["/home/ajay/apps/covidtrack/src/components/Comparitivechart/Comparitivechart.jsx"],"names":["React","useRef","useEffect","Bar","styles","Comparitivechart","data","confirmed","recovered","deaths","country","usePrevious","value","ref","current","confirmed2","console","log","barChart","labels","datasets","label","backgroundColor","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,QAAwC,OAAxC;AACA,SAASC,GAAT,QAAoB,iBAApB,C,CAEA;;AAEA,OAAOC,MAAP,MAAmB,+BAAnB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,GAAR;AAA0CC,EAAAA;AAA1C,CAAD,KAAyD;AAC9E;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA,WAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,UAAMC,GAAG,GAAGZ,MAAM,EAAlB;AACAC,IAAAA,SAAS,CAAC,MAAM;AACdW,MAAAA,GAAG,CAACC,OAAJ,GAAcF,KAAd;AACD,KAFQ,CAAT;AAGA,WAAOC,GAAG,CAACC,OAAX;AACD;;AAGH,QAAMC,UAAU,GAAGJ,WAAW,CAACL,IAAD,CAA9B;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AAEA,QAAMY,QAAQ,GACVX,SAAS,gBACP,oBAAC,GAAD;AACE,IAAA,IAAI,EAAE;AACJY,MAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,QADT;AAEEC,QAAAA,eAAe,EAAE,CAAC,sBAAD,EAAyB,sBAAzB,EAAiD,sBAAjD,CAFnB;AAGEhB,QAAAA,IAAI,EAAE,CAACC,SAAS,CAACK,KAAX,EAAkBG,UAAU,CAACH,KAA7B;AAHR,OADQ;AAFN,KADR;AAWE,IAAA,OAAO,EAAE;AACPW,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADD;AAEPC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAG,oBAAmBhB,OAAQ;AAAnD;AAFA,KAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,GAiBL,IAlBR;AAoBE,sBACE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACuB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,QADH,CADF;AAKD,CAlDL;;AAsDA,eAAeb,gBAAf","sourcesContent":["import React, {useRef, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\n// import { fetchDailyData } from '../../api';\n\nimport styles from './Comparitivechart.module.css';\n\nconst Comparitivechart = ({ data: { confirmed, recovered, deaths }, country }) => {\n    // const [dailyData, setDailyData] = useState({});\n  \n    // useEffect(() => {\n    //   const fetchMyAPI = async () => {\n    //     const initialDailyData = await fetchDailyData();\n  \n    //     setDailyData(initialDailyData);\n    //   };\n  \n    //   fetchMyAPI();\n    // }, []);\n    function usePrevious(value) {\n        const ref = useRef();\n        useEffect(() => {\n          ref.current = value;\n        });\n        return ref.current;\n      }\n\n\n    const confirmed2 = usePrevious(data)\n\n    console.log(data);\n\n    const barChart = (\n        confirmed ? (\n          <Bar\n            data={{\n              labels: ['country', 'country2'],\n              datasets: [\n                {\n                  label: 'People',\n                  backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                  data: [confirmed.value, confirmed2.value],\n                },\n              ],\n            }}\n            options={{\n              legend: { display: false },\n              title: { display: true, text: `Current state in ${country}` },\n            }}\n          />\n        ) : null\n      );\n      return (\n        <div className={styles.container}>\n          {barChart }\n        </div>\n      );\n    };\n\n\n\nexport default Comparitivechart;"]},"metadata":{},"sourceType":"module"}